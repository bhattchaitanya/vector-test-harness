#!/usr/bin/env ruby

# This script exports the passed results into a .json file
#
# We use Ruby since we have to mangle with a complex data structure.
# Trying to print this table using bash utilities such as jq was
# painful.

require 'json'

require_relative "athena"
require_relative "util"

results_json = ARGV[0]
file_name = ARGV[1]

if results_json.nil?
  raise "You must pass the query results JSON as the first argument"
end

def build_metric(metric_slug, test_hashes)
  metric_meta = fetch_metric_meta!(metric_slug)
  metric_name = metric_meta.fetch(:name)
  metric_unit = metric_meta.fetch(:unit)
  metric_sort = metric_meta.fetch(:sort)
  measurements = build_measurements(test_hashes, metric_slug, metric_unit)

  if metric_sort == :desc
    measurements = measurements.reverse
  end

  {
    "slug" => metric_slug,
    "name" => metric_name,
    "unit" => metric_unit,
    "measurements" => measurements
  }
end

def build_measurements(hashes, metric_slug, metric_unit)
  hashes.
    collect do |hash|
      subject_slug = hash.fetch("subject")
      subject_meta = fetch_subject_meta!(subject_slug)
      subject_name = subject_meta.fetch(:name)
      subject_version = hash.fetch("version")

      measurement_value = hash.fetch(metric_slug).round(2)
      measurement_label = metric_unit == "bytes" ? filesize(measurement_value) : measurement_value

      {
        "label" => measurement_label,
        "subject_slug" => subject_slug,
        "subject_name" => subject_name,
        "subject_version" => subject_version,
        "value" => measurement_value
      }
    end.
    sort_by { |hash| hash.fetch("value") }
end

def transform_to_data!(hashes)
  hashes.
    group_by { |h| h["name"] }.
    collect do |name, test_hashes|
      test_meta = fetch_test_meta!(name)
      io_key = name.include?("file") ? "disk_read_avg" : "net_recv_avg"

      metrics =
        test_hashes.
          first.
          keys.
          select { |key| is_metric?(key) }.
          collect { |metric_slug| build_metric(metric_slug, test_hashes) }

      {
        "slug" => name,
        "name" => test_meta.fetch(:name),
        "description" => test_meta.fetch(:description),
        "metrics" => metrics,
        "io_metric_slug" => test_meta.fetch(:io_metric_slug)
      }
    end
end

results = JSON.parse(results_json)
result_set = results["ResultSet"]
rows = result_set["Rows"]
result_set_metadata = result_set["ResultSetMetadata"]
hashes = transform_to_hashes!(rows, result_set_metadata)
data = transform_to_data!(hashes)
data = {"performance_tests" => data}
data = JSON.pretty_generate(data)

File.open(file_name, "w") do |f|
  f.write(data)
end
